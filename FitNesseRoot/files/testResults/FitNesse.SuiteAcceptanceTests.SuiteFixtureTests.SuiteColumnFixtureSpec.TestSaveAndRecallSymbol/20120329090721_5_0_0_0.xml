<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20111026</FitNesseVersion>
  <rootPath>TestSaveAndRecallSymbol</rootPath>
    <result>
    <counts>
      <right>5</right>
      <wrong>0</wrong>
      <ignores>0</ignores>
      <exceptions>0</exceptions>
    </counts>
    <runTimeInMillis>5</runTimeInMillis>
    <content><![CDATA[<br/><div class="collapse_rim">
	<div style="float: right;" class="meta">
		<a href="javascript:expandAll();">Expand All</a>
 | 
		<a href="javascript:collapseAll();">Collapse All</a>
	</div>
	<a href="javascript:toggleCollapsable('1120');">
		<img src="/files/images/collapsableClosed.gif" class="left" id="img1120"/>
	</a>
&nbsp;
	<span class="meta">Included page: <a href="FitNesse.SuiteAcceptanceTests.SetUp">.FitNesse.SuiteAcceptanceTests.SetUp</a> <a href="FitNesse.SuiteAcceptanceTests.SetUp?edit&amp;redirectToReferer=true&amp;redirectAction=">(edit)</a></span>
	<div class="hidden" id="1120"><table border="1" cellspacing="0">
	<tr>
		<td>Import</td>
	</tr>
	<tr>
		<td>fitnesse.fixtures</td>
	</tr>
</table>
<br/><table border="1" cellspacing="0">
	<tr>
		<td>SetUp</td>
	</tr>
</table>
</div>
</div>
<br/><h3>You can save and recall symbols in a ColumnFixture.  You do this by using the =id? and id= syntax.</h3>
<br/><br/><ul>
	<li>=id? or =id() takes the output of a function and stores it in the symbol named by the cell.  In the example below the integer 1 is stored in the symbol <i>one</i>, and the integer 2 is stored in the symbol <i>two</i>.</li>
	<li>id= recalls the value of the symbol named by the cell, and puts it in the <i>id</i> variable.</li>
</ul>
<br/><table border="1" cellspacing="0">
	<tr>
		<td colspan="2">fitnesse.fixtures.ColumnFixtureTestFixture</td>
	</tr>
	<tr>
		<td>input</td>
		<td>=output?</td>
	</tr>
	<tr>
		<td>1</td>
		<td>one <span class="fit_grey"> = 1</span></td>
	</tr>
	<tr>
		<td>2</td>
		<td>two <span class="fit_grey"> = 2</span></td>
	</tr>
</table>
<br/><table border="1" cellspacing="0">
	<tr>
		<td colspan="2">fitnesse.fixtures.ColumnFixtureTestFixture</td>
	</tr>
	<tr>
		<td>input=</td>
		<td>output?</td>
	</tr>
	<tr>
		<td>one <span class="fit_grey"> = 1</span></td>
		<td class="pass">1</td>
	</tr>
	<tr>
		<td>two <span class="fit_grey"> = 2</span></td>
		<td class="pass">2</td>
	</tr>
</table>
<br/><b>With classed integral types, there's a chance the value may be null as a correct result:</b><br/><table border="1" cellspacing="0">
	<tr>
		<td colspan="2">fitnesse.fixtures.ColumnFixtureTestFixture</td>
	</tr>
	<tr>
		<td>integerInput</td>
		<td>=integerOutput?</td>
	</tr>
	<tr>
		<td>1</td>
		<td>one <span class="fit_grey"> = 1</span></td>
	</tr>
	<tr>
		<td>2</td>
		<td>two <span class="fit_grey"> = 2</span></td>
	</tr>
	<tr>
		<td>null</td>
		<td>three <span class="fit_grey"> = null</span></td>
	</tr>
</table>
<br/><table border="1" cellspacing="0">
	<tr>
		<td colspan="2">fitnesse.fixtures.ColumnFixtureTestFixture</td>
	</tr>
	<tr>
		<td>integerInput=</td>
		<td>integerOutput?</td>
	</tr>
	<tr>
		<td>one <span class="fit_grey"> = 1</span></td>
		<td class="pass">1</td>
	</tr>
	<tr>
		<td>two <span class="fit_grey"> = 2</span></td>
		<td class="pass">2</td>
	</tr>
	<tr>
		<td>three <span class="fit_grey"> = null</span></td>
		<td class="pass">null</td>
	</tr>
</table>
<br/><pre>
public class ColumnFixtureTestFixture extends ColumnFixture
{
  public int input;
  public int output() {return input;}

  public Integer integerInput;
  public Integer integerOutput() { return integerInput; }

  public boolean exception() throws Exception {throw new Exception("I thowed up");}
}
</pre>
<br/><br/><br/><div class="collapse_rim">
	<div style="float: right;" class="meta">
		<a href="javascript:expandAll();">Expand All</a>
 | 
		<a href="javascript:collapseAll();">Collapse All</a>
	</div>
	<a href="javascript:toggleCollapsable('1121');">
		<img src="/files/images/collapsableClosed.gif" class="left" id="img1121"/>
	</a>
&nbsp;
	<span class="meta">Included page: <a href="FitNesse.SuiteAcceptanceTests.TearDown">.FitNesse.SuiteAcceptanceTests.TearDown</a> <a href="FitNesse.SuiteAcceptanceTests.TearDown?edit&amp;redirectToReferer=true&amp;redirectAction=">(edit)</a></span>
	<div class="hidden" id="1121"><hr/>
<br/><table border="1" cellspacing="0">
	<tr>
		<td>tear down</td>
	</tr>
</table>
<br/></div>
</div>
<br/>]]></content>
    <relativePageName>TestSaveAndRecallSymbol</relativePageName>
    
    
    
  </result>
  
    <finalCounts>
    <right>0</right>
    <wrong>0</wrong>
    <ignores>0</ignores>
    <exceptions>0</exceptions>
  </finalCounts>
  <totalRunTimeInMillis>0</totalRunTimeInMillis>
  
</testResults>

